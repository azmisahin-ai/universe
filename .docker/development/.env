# This is a sample .env file for use in local development.
# When the new images are built, have your continuous deployment system deploy them to a staging environment.

# Product environment
# If you want to run it in a test environment, you should use the "test" tag.
# For Alpine Linux:
#   APP_ENV="test"
APP_ENV="development"
# A unique name for your app
APP_NAME="universe"

# Docker Compose use environment variable.
COMPOSE_PROJECT_NAME="${APP_NAME}_${APP_ENV}"

# build
# If you need modifications, you can use a different image.
# Set the distribution identifier and base image accordingly.
# For Alpine Linux:
# DISTRIB_ID="alpine"
# BASE_IMAGE="alpine:latest"
# For Debian Linux:
DISTRIB_ID="debian"
BASE_IMAGE="debian:stable"

# System package
BUILD_PACKAGES=nasm binutils mingw-w64
DEVELOPMENT_PACKAGES=$BUILD_PACKAGES bash git gdb
TEST_PACKAGES=curl
PLATFORM=linux
BIT=32

# Physical
PROJECT_FOLDER="/workspace/universe"
DATA_FOLDER="/data"

# SERVER
# If you are going to define a broadcast address.
HOST_IP="0.0.0.0"

# If you need an output port.
# Service Name and Transport Protocol Port Number Registry
PORT="9001"
PORT_RANGE="8280"

# DEPLOY
# You can perform performance testing by selecting lower resources in test environments.
RESOURCE_CPUS="0.5"
RESOURCE_GPUS="1"
RESOURCE_MEMORY="4GiB"
SCALE="1"